{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "The responses of the open api in swagger focus on the data field rather than the code and the message fields",
        "title": "Rainbow-APP-Service",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "console.nftrainbow.cn",
    "basePath": "/apps",
    "paths": {
        "/batch/by-meta-uri": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Batch mint by metadata uri",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Batch mint by metadata uri",
                "operationId": "MintBatchByMetaUri",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "mint_batch_dto",
                        "name": "mint_batch_dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.MintBatchDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BatchMintTask"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/batch/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Batch mint task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Get Batch mint task",
                "operationId": "GetBatchMintTask",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "task_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BatchMintTask"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/invite_url": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get invite url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get invite url",
                "operationId": "GetInviteUrl",
                "parameters": [
                    {
                        "enum": [
                            "dodo",
                            "discord"
                        ],
                        "type": "string",
                        "description": "social tool",
                        "name": "social_tool",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get bot servers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get bot servers",
                "operationId": "GetBotServers",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "dodo",
                            "discord"
                        ],
                        "type": "string",
                        "description": "social tool",
                        "name": "social_tool",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FindBotServersResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "insert bot server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "insert bot server",
                "operationId": "InsertBotServer",
                "parameters": [
                    {
                        "description": "insert_bot_server_request",
                        "name": "insert_bot_server_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.InsertBotServerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BotServer"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/activities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get activites of user bot servers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get activites of user bot servers",
                "operationId": "GetActivitiesOfUserBotServers",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "dodo",
                            "discord"
                        ],
                        "type": "string",
                        "description": "social tool",
                        "name": "social_tool",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "activity name",
                        "name": "activity_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contract_address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FindBotServerActivitiesResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/authcode": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get bot server roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get bot server roles",
                "operationId": "GetAuthCode",
                "parameters": [
                    {
                        "type": "string",
                        "name": "server_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "dodo",
                            "discord"
                        ],
                        "type": "string",
                        "description": "social tool",
                        "name": "social_tool",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/channels": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get bot server channels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get bot server channels",
                "operationId": "GetBotServerChannels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "server id",
                        "name": "server_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "dodo",
                            "discord"
                        ],
                        "type": "string",
                        "description": "social tool",
                        "name": "social_tool",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.Channel"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/push/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "push notification to social tool server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "push notification to social tool server",
                "operationId": "Push",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "push_info ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/pushinfo/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update push info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "update push info",
                "operationId": "UpdatePushInfo",
                "parameters": [
                    {
                        "description": "update push info request",
                        "name": "push_info_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.PushInfoReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "push_info ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PushInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get bot server roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get bot server roles",
                "operationId": "GetBotServerRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "server id",
                        "name": "server_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "dodo",
                            "discord"
                        ],
                        "type": "string",
                        "description": "social tool",
                        "name": "social_tool",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get bot server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "get bot server",
                "operationId": "GetBotServer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "server id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BotServer"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/bot/server/{id}/pushinfo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add push info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "add push info",
                "operationId": "AddPushInfo",
                "parameters": [
                    {
                        "description": "add push info request",
                        "name": "push_info_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.PushInfoReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "bot_server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PushInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/contract_certificate/{certificate_id}/snapshot": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Snapshots",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Get Snapshots",
                "operationId": "GetSnapshots",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "certificate_id",
                        "name": "certificate_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ContractSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/contract_certificate/{certificate_id}/snapshot/run": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Trigger Obtain Snapshot",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Trigger Obtain Snapshot",
                "operationId": "TriggerObtainSnapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "certificate_id",
                        "name": "certificate_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get certificate strategies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Get certificate strategies",
                "operationId": "GetCertificateStrategies",
                "parameters": [
                    {
                        "type": "string",
                        "name": "certificate_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name_like",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemsWithCount-certificate_CertificateStrategy"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/type/address": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert address Certificate Strategy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Insert address Certificate Strategy",
                "operationId": "InsertAddressCertificateStrategy",
                "parameters": [
                    {
                        "description": "insert_certificate_strategy_req",
                        "name": "insert_certificate_strategy_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.InsertCertificateStrategyReq-certificate_AddressCertificateInsertPart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.CertificateStrategy"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/type/contract": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert contract Certificate Strategy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Insert contract Certificate Strategy",
                "operationId": "InsertContractCertificateStrategy",
                "parameters": [
                    {
                        "description": "insert_certificate_strategy_req",
                        "name": "insert_certificate_strategy_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.InsertCertificateStrategyReq-certificate_ContractCertificateInsertPart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.CertificateStrategy"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/type/dodo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert dodo Certificate Strategy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Insert dodo Certificate Strategy",
                "operationId": "InsertDodoCertificateStrategy",
                "parameters": [
                    {
                        "description": "insert_certificate_strategy_req",
                        "name": "insert_certificate_strategy_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.InsertCertificateStrategyReq-certificate_DodoCertificateInsertPart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.CertificateStrategy"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/type/gasless": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert gasless Certificate Strategy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Insert gasless Certificate Strategy",
                "operationId": "InsertGaslessCertificateStrategy",
                "parameters": [
                    {
                        "description": "insert_certificate_strategy_req",
                        "name": "insert_certificate_strategy_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.InsertCertificateStrategyReq-certificate_GaslessCertificateInsertPart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.CertificateStrategy"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/type/phone": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert phone Certificate Strategy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Insert phone Certificate Strategy",
                "operationId": "InsertPhoneCertificateStrategy",
                "parameters": [
                    {
                        "description": "insert_certificate_strategy_req",
                        "name": "insert_certificate_strategy_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.InsertCertificateStrategyReq-certificate_PhoneCertificateInsertPart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.CertificateStrategy"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/certis/strategy/{id}/certificates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Certificates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Get Certificates",
                "operationId": "GetCertificates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "certificate_strategy_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.CertificatesQueryResult-routers_CompositedCertificate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert Certificates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Insert Certificates",
                "operationId": "InsertCertificates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "certificate_strategy_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "certificate",
                        "name": "certificates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routers.CompositedCertificate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Certificates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certi"
                ],
                "summary": "Delete Certificates",
                "operationId": "DeleteCertificates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "certificate_strategy_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "certificate_ids",
                        "name": "certificate_ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get User Activity list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Get User Activity list",
                "operationId": "GetUserActivities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "activity_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                1,
                                2,
                                3
                            ],
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "exclude_no_contract",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ActivityQueryResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Add Activity",
                "operationId": "AddActivity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "activity config",
                        "name": "activity_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivityInsertPart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/h5": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Set H5 Page Config",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Set H5 Config",
                "operationId": "SetActivityH5Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "poap_h5_config",
                        "name": "poap_h5_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.H5Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.H5Config"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/result/{activity_code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Mint Result list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Get Mint Result list",
                "operationId": "GetMintResultList",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "statuses",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "activity_code",
                        "name": "activity_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.POAPResultQueryResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/result/{activity_code}/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Mint Result",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Get Mint Result",
                "operationId": "GetMintResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "activity_code",
                        "name": "activity_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.POAPResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/token-reserve": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add reserve tokenids for activity, they will be skiped when mint by h5",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Add reserve tokenids for activity",
                "operationId": "AddTokenReserves",
                "parameters": [
                    {
                        "description": "token reserves",
                        "name": "token_reserves",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TokenReserve"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/token-reserve/{activity_code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get reserve tokenids of activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Get reserve tokenids of activity",
                "operationId": "GetTokenReserves",
                "parameters": [
                    {
                        "type": "string",
                        "description": "activity code",
                        "name": "activity_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TokenReserve"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/{activity_code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Activity detail info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Get Activity detail",
                "operationId": "GetActivityDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "activity_code",
                        "name": "activity_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Update Activity",
                "operationId": "UpdateActivity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "activity_id",
                        "name": "activity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update activity request",
                        "name": "update_activity_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivityUpdateBasePart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/activity/{activity_code}/nftconfigs": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Activity NFT configs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Add Activity NFT configs",
                "operationId": "AddActivityNftConfigs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "activity nft configs",
                        "name": "nft_configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NftConfigUpdatePart"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NFTConfig"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/count/{address}/{activity_code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Mint Count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Get Mint Count",
                "operationId": "GetMintCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "activity_code",
                        "name": "activity_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/h5": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mint By H5",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Mint By H5",
                "operationId": "MintByH5",
                "parameters": [
                    {
                        "description": "mint request",
                        "name": "mint_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.MintReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.POAPResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/poap/wallet/user": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add user wallet profile, so backend can get user phone from anyweb",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Add user wallet profile, so backend can get user phone from anyweb",
                "operationId": "AddWalletUser",
                "parameters": [
                    {
                        "description": "add wallet user request",
                        "name": "add_wallet_user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.AddWalletUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginutils.CommonMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/post/activity/nftconfig/{nft_config_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Activity NFT Config",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Update Activity NFT Config",
                "operationId": "UpdateActivityNftConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "nft_config_id",
                        "name": "nft_config_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update Nft config request",
                        "name": "update_nft_config_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NftConfigUpdatePart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NFTConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Activity NFT Config",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POAP"
                ],
                "summary": "Delete Activity NFT Config",
                "operationId": "DeleteActivityNftConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "nft_config_id",
                        "name": "nft_config_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NFTConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "appService_errors.RainbowAppServiceErrorDetailInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "certificate.AddressCertificateInsertPart": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "certificate.CertificateStrategy": {
            "type": "object",
            "properties": {
                "certificate_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "certificate.CertificatesQueryResult-routers_CompositedCertificate": {
            "type": "object",
            "properties": {
                "certificate_type": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routers.CompositedCertificate"
                    }
                }
            }
        },
        "certificate.ContractCertificateInsertPart": {
            "type": "object",
            "properties": {
                "activity_code": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/enums.Chain"
                },
                "contract_address": {
                    "type": "string"
                },
                "contract_type": {
                    "$ref": "#/definitions/enums.ContractType"
                },
                "snapshot_epoch_number": {
                    "type": "integer"
                }
            }
        },
        "certificate.ContractSnapshot": {
            "type": "object",
            "properties": {
                "activity_code": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "contract_certificate_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "owner": {
                    "type": "string"
                },
                "snapshot_epoch_number": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "certificate.DodoCertificateInsertPart": {
            "type": "object",
            "properties": {
                "dodo_source_id": {
                    "type": "string"
                }
            }
        },
        "certificate.GaslessCertificateInsertPart": {
            "type": "object",
            "properties": {
                "activity_code": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/enums.Chain"
                },
                "snapshot_epoch_number": {
                    "type": "integer"
                }
            }
        },
        "certificate.PhoneCertificateInsertPart": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string"
                }
            }
        },
        "enums.ActivityStatus": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "ACTIVITY_STATUS_UNSTART",
                "ACTIVITY_STATUS_ONGOING",
                "ACTIVITY_SINGLE_END"
            ]
        },
        "enums.ActivityType": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "ACTIVITY_BLINDBOX",
                "ACTIVITY_SINGLE",
                "ACTIVITY_GASLESS"
            ]
        },
        "enums.Chain": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "CHAIN_CONFLUX",
                "CHAIN_CONFLUX_TEST"
            ]
        },
        "enums.ContractType": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "ContractType_ERC721",
                "ContractType_ERC1155"
            ]
        },
        "enums.SnapshotStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "SNAPSHOT_STATUS_INIT",
                "SNAPSHOT_STATUS_PROCESSING",
                "SNAPSHOT_STATUS_SUCCESS",
                "SNAPSHOT_STATUS_FAILED"
            ]
        },
        "enums.SocialToolType": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "SOCIAL_TOOL_DISCORD",
                "SOCIAL_TOOL_DODO"
            ]
        },
        "enums.TransactionStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "TRANSACTION_STATUS_INIT",
                "TRANSACTION_STATUS_SUCCESS",
                "TRANSACTION_STATUS_FAILED"
            ]
        },
        "enums.WalletType": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "WALLET_ANYWEB",
                "WALLET_CELLAR"
            ]
        },
        "ginutils.CommonMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Activity": {
            "type": "object",
            "required": [
                "activity_type",
                "amount",
                "app_id",
                "description",
                "max_mint_count",
                "name"
            ],
            "properties": {
                "activity_id": {
                    "description": "TODO: 与前端统一调整为activity_code",
                    "type": "string"
                },
                "activity_picture_url": {
                    "type": "string"
                },
                "activity_poster_url": {
                    "type": "string"
                },
                "activity_type": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "app_id": {
                    "type": "integer"
                },
                "app_name": {
                    "type": "string"
                },
                "certificate_stratage_id": {
                    "type": "integer"
                },
                "chain_of_gasless": {
                    "description": "default value: \"conflux_test\"",
                    "type": "string",
                    "default": "2"
                },
                "command": {
                    "type": "string"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "contract_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer",
                    "default": -1
                },
                "id": {
                    "type": "integer"
                },
                "is_token_id_ordered": {
                    "description": "IsPhoneWhiteListOpened bool                                  `gorm:\"type:bool;default:false\" json:\"is_phone_white_list_opened\"`",
                    "type": "boolean",
                    "default": true
                },
                "max_mint_count": {
                    "type": "integer"
                },
                "metadata_uri": {
                    "description": "支持模版 如 http://xx/{id}.json, 铸造时 MetadataUri 优先，若为空则根据nftconfig创建metadata",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nft_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NFTConfig"
                    }
                },
                "rainbow_user_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "integer",
                    "default": -1
                },
                "support_wallets": {
                    "description": "default value: [\"anyweb\",\"cellar\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ActivityInsertPart": {
            "type": "object",
            "required": [
                "activity_type",
                "amount",
                "app_id",
                "description",
                "max_mint_count",
                "name"
            ],
            "properties": {
                "activity_picture_url": {
                    "type": "string"
                },
                "activity_type": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "app_id": {
                    "type": "integer"
                },
                "app_name": {
                    "type": "string"
                },
                "certificate_stratage_id": {
                    "type": "integer"
                },
                "chain_of_gasless": {
                    "description": "default value: \"conflux_test\"",
                    "type": "string",
                    "default": "2"
                },
                "command": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer",
                    "default": -1
                },
                "is_token_id_ordered": {
                    "description": "IsPhoneWhiteListOpened bool                                  `gorm:\"type:bool;default:false\" json:\"is_phone_white_list_opened\"`",
                    "type": "boolean",
                    "default": true
                },
                "max_mint_count": {
                    "type": "integer"
                },
                "metadata_uri": {
                    "description": "支持模版 如 http://xx/{id}.json, 铸造时 MetadataUri 优先，若为空则根据nftconfig创建metadata",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "integer",
                    "default": -1
                },
                "support_wallets": {
                    "description": "default value: [\"anyweb\",\"cellar\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ActivityQueryResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                }
            }
        },
        "models.ActivityUpdateBasePart": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "max_mint_count",
                "name"
            ],
            "properties": {
                "activity_picture_url": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "certificate_stratage_id": {
                    "type": "integer"
                },
                "command": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer",
                    "default": -1
                },
                "is_token_id_ordered": {
                    "description": "IsPhoneWhiteListOpened bool                                  `gorm:\"type:bool;default:false\" json:\"is_phone_white_list_opened\"`",
                    "type": "boolean",
                    "default": true
                },
                "max_mint_count": {
                    "type": "integer"
                },
                "metadata_uri": {
                    "description": "支持模版 如 http://xx/{id}.json, 铸造时 MetadataUri 优先，若为空则根据nftconfig创建metadata",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "integer",
                    "default": -1
                },
                "support_wallets": {
                    "description": "default value: [\"anyweb\",\"cellar\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.BatchMintTask": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "mint_task_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "source_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.BotServer": {
            "type": "object",
            "required": [
                "owner_social_id",
                "rainbow_user_id",
                "raw_server_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "default_activity_channel_id": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "outdated_server_id": {
                    "type": "string"
                },
                "owner_social_id": {
                    "type": "string"
                },
                "push_infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PushInfo"
                    }
                },
                "rainbow_user_id": {
                    "type": "integer"
                },
                "raw_server_id": {
                    "type": "string"
                },
                "server_name": {
                    "type": "string"
                },
                "social_tool": {
                    "$ref": "#/definitions/enums.SocialToolType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Contract": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "chain_type": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "contract_raw_id": {
                    "description": "POAPActivityConfigID uint   `gorm:\"column:poap_activity_config_id\" json:\"poap_activity_config_id\"`",
                    "type": "integer"
                },
                "contract_type": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.FindBotServerActivitiesResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FlattenBotServerActivity"
                    }
                }
            }
        },
        "models.FindBotServersResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BotServer"
                    }
                }
            }
        },
        "models.FlattenBotServerActivity": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "activity_id": {
                    "type": "string"
                },
                "activity_type": {
                    "$ref": "#/definitions/enums.ActivityType"
                },
                "chain_id": {
                    "type": "integer"
                },
                "chain_type": {
                    "type": "integer"
                },
                "channel_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "integer",
                    "default": -1
                },
                "last_push_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_social_id": {
                    "type": "string"
                },
                "push_info_id": {
                    "type": "integer"
                },
                "rainbow_user_id": {
                    "type": "integer"
                },
                "raw_server_id": {
                    "type": "string"
                },
                "server_name": {
                    "type": "string"
                },
                "social_tool": {
                    "$ref": "#/definitions/enums.SocialToolType"
                },
                "start_time": {
                    "type": "integer",
                    "default": -1
                }
            }
        },
        "models.H5Config": {
            "type": "object",
            "required": [
                "link"
            ],
            "properties": {
                "activity_id": {
                    "type": "string"
                },
                "button_word_color": {
                    "type": "integer"
                },
                "claim_button_color": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "content_color": {
                    "type": "integer"
                },
                "content_size": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "mobile_picture_url": {
                    "type": "string"
                },
                "pc_picture_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "title_color": {
                    "type": "integer"
                },
                "title_size": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ItemsWithCount-certificate_CertificateStrategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.CertificateStrategy"
                    }
                }
            }
        },
        "models.MetadataAttribute": {
            "type": "object",
            "properties": {
                "display_type": {
                    "type": "string"
                },
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.NFTConfig": {
            "type": "object",
            "properties": {
                "activityID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MetadataAttribute"
                    }
                },
                "name": {
                    "type": "string"
                },
                "probability": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.NftConfigUpdatePart": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "metadata_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MetadataAttribute"
                    }
                },
                "name": {
                    "type": "string"
                },
                "probability": {
                    "type": "number"
                }
            }
        },
        "models.POAPResult": {
            "type": "object",
            "required": [
                "address",
                "contract_id"
            ],
            "properties": {
                "activity_id": {
                    "description": "TODO:  与前端一起更新为activity_code",
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "app_id": {
                    "type": "integer"
                },
                "config_id": {
                    "type": "integer"
                },
                "contract_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "file_url": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "projector_id": {
                    "type": "integer"
                },
                "social_id": {
                    "type": "string"
                },
                "social_type": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/enums.TransactionStatus"
                },
                "token_id": {
                    "type": "string"
                },
                "tx_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.POAPResultQueryResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.POAPResult"
                    }
                }
            }
        },
        "models.PushInfo": {
            "type": "object",
            "properties": {
                "activity": {
                    "$ref": "#/definitions/models.Activity"
                },
                "activity_id": {
                    "type": "integer"
                },
                "bot_server_id": {
                    "type": "integer"
                },
                "channel_id": {
                    "type": "string"
                },
                "color_theme": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "last_push_time": {
                    "type": "integer"
                },
                "roles": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TokenReserve": {
            "type": "object",
            "required": [
                "activity_id",
                "token_id_end",
                "token_id_start"
            ],
            "properties": {
                "activity_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "token_id_end": {
                    "type": "integer"
                },
                "token_id_start": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "routers.CompositedCertificate": {
            "type": "object",
            "properties": {
                "activity_code": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/enums.Chain"
                },
                "contract_address": {
                    "type": "string"
                },
                "contract_type": {
                    "$ref": "#/definitions/enums.ContractType"
                },
                "dodo_source_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "snapshot_epoch_number": {
                    "type": "integer"
                }
            }
        },
        "services.AddWalletUserReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chain": {
                    "$ref": "#/definitions/enums.Chain"
                },
                "code": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "wallet": {
                    "$ref": "#/definitions/enums.WalletType"
                }
            }
        },
        "services.Channel": {
            "type": "object",
            "properties": {
                "channelId": {
                    "description": "频道号",
                    "type": "string"
                },
                "channelName": {
                    "description": "频道名称",
                    "type": "string"
                }
            }
        },
        "services.ContractSnapshotResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "snapshotStatus": {
                    "$ref": "#/definitions/enums.SnapshotStatus"
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.ContractSnapshot"
                    }
                }
            }
        },
        "services.InsertBotServerReq": {
            "type": "object",
            "required": [
                "auth_code",
                "server_id",
                "social_tool"
            ],
            "properties": {
                "auth_code": {
                    "type": "string"
                },
                "outdated_server_id": {
                    "type": "string"
                },
                "server_id": {
                    "type": "string"
                },
                "social_tool": {
                    "type": "string",
                    "enum": [
                        "dodo",
                        "discord"
                    ]
                }
            }
        },
        "services.InsertCertificateStrategyReq-certificate_AddressCertificateInsertPart": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.AddressCertificateInsertPart"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.InsertCertificateStrategyReq-certificate_ContractCertificateInsertPart": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.ContractCertificateInsertPart"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.InsertCertificateStrategyReq-certificate_DodoCertificateInsertPart": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.DodoCertificateInsertPart"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.InsertCertificateStrategyReq-certificate_GaslessCertificateInsertPart": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.GaslessCertificateInsertPart"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.InsertCertificateStrategyReq-certificate_PhoneCertificateInsertPart": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/certificate.PhoneCertificateInsertPart"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.MintBatchDto": {
            "type": "object",
            "required": [
                "chain",
                "contract_address",
                "mint_items"
            ],
            "properties": {
                "appId": {
                    "type": "integer"
                },
                "chain": {
                    "type": "string",
                    "enum": [
                        "conflux",
                        "conflux_test"
                    ]
                },
                "contract_address": {
                    "type": "string"
                },
                "mint_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.MintItemDto"
                    }
                },
                "source_type": {
                    "type": "string"
                }
            }
        },
        "services.MintItemDto": {
            "type": "object",
            "required": [
                "mint_to"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "metadata_uri": {
                    "type": "string"
                },
                "mint_to": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "services.MintReq": {
            "type": "object",
            "required": [
                "activity_id",
                "user_address"
            ],
            "properties": {
                "activity_id": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "user_address": {
                    "type": "string"
                }
            }
        },
        "services.PushInfoReq": {
            "type": "object",
            "properties": {
                "activity_id": {
                    "type": "integer"
                },
                "channel_id": {
                    "type": "string"
                },
                "color_theme": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "services.Role": {
            "type": "object",
            "properties": {
                "roleId": {
                    "description": "身份组ID",
                    "type": "string"
                },
                "roleName": {
                    "description": "身份组名称",
                    "type": "string"
                }
            }
        }
    }
}