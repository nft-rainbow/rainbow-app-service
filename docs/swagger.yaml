basePath: /apps
definitions:
  appService_errors.RainbowAppServiceErrorDetailInfo:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  ginutils.CommonMessage:
    properties:
      message:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Activity:
    properties:
      activity_id:
        description: 'TODO: 与前端统一调整为activity_code'
        type: string
      activity_picture_url:
        type: string
      activity_poster_url:
        type: string
      activity_type:
        type: integer
      amount:
        type: integer
      app_id:
        type: integer
      app_name:
        type: string
      command:
        type: string
      contract:
        $ref: '#/definitions/models.Contract'
      contract_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      end_time:
        default: -1
        type: integer
      id:
        type: integer
      is_phone_white_list_opened:
        type: boolean
      max_mint_count:
        type: integer
      metadata_uri:
        type: string
      name:
        type: string
      nft_configs:
        items:
          $ref: '#/definitions/models.NFTConfig'
        type: array
      rainbow_user_id:
        type: integer
      start_time:
        default: -1
        type: integer
      updated_at:
        type: string
      white_list_infos:
        items:
          $ref: '#/definitions/models.WhiteListInfo'
        type: array
    required:
    - activity_type
    - amount
    - app_id
    - description
    - max_mint_count
    - name
    type: object
  models.ActivityQueryResult:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.Activity'
        type: array
    type: object
  models.ActivityReq:
    properties:
      activity_picture_url:
        type: string
      activity_type:
        type: integer
      amount:
        type: integer
      app_id:
        type: integer
      app_name:
        type: string
      command:
        type: string
      contract_id:
        type: integer
      description:
        type: string
      end_time:
        default: -1
        type: integer
      is_phone_white_list_opened:
        type: boolean
      max_mint_count:
        type: integer
      metadata_uri:
        type: string
      name:
        type: string
      nft_configs:
        items:
          $ref: '#/definitions/models.NFTConfig'
        type: array
      start_time:
        default: -1
        type: integer
      white_list_infos:
        items:
          $ref: '#/definitions/models.WhiteListInfo'
        type: array
    required:
    - activity_type
    - amount
    - app_id
    - description
    - max_mint_count
    - name
    type: object
  models.BotServer:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      owner_social_id:
        type: string
      push_infos:
        items:
          $ref: '#/definitions/models.PushInfo'
        type: array
      rainbow_user_id:
        type: integer
      raw_server_id:
        type: string
      social_tool:
        type: integer
      updated_at:
        type: string
    required:
    - owner_social_id
    - rainbow_user_id
    - raw_server_id
    type: object
  models.Contract:
    properties:
      chain_id:
        type: integer
      chain_type:
        type: integer
      contract_address:
        type: string
      contract_raw_id:
        description: POAPActivityConfigID uint   `gorm:"column:poap_activity_config_id"
          json:"poap_activity_config_id"`
        type: integer
      contract_type:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updated_at:
        type: string
    type: object
  models.FindBotServerActivitiesResult:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.PlattenBotServerActivity'
        type: array
    type: object
  models.FindBotServersResult:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.BotServer'
        type: array
    type: object
  models.H5Config:
    properties:
      activity_id:
        type: string
      button_word_color:
        type: integer
      claim_button_color:
        type: string
      content:
        type: string
      content_color:
        type: integer
      content_size:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      link:
        type: string
      logo_url:
        type: string
      mobile_picture_url:
        type: string
      pc_picture_url:
        type: string
      title:
        type: string
      title_color:
        type: integer
      title_size:
        type: integer
      updated_at:
        type: string
    required:
    - link
    type: object
  models.MetadataAttribute:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      display_type:
        type: string
      id:
        type: integer
      nftconfigID:
        type: integer
      trait_type:
        type: string
      updated_at:
        type: string
      value:
        type: string
    type: object
  models.NFTConfig:
    properties:
      activityID:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      image_url:
        type: string
      metadata_attributes:
        items:
          $ref: '#/definitions/models.MetadataAttribute'
        type: array
      name:
        type: string
      probability:
        type: number
      updated_at:
        type: string
    type: object
  models.POAPResult:
    properties:
      activity_id:
        description: 'TODO:  与前端一起更新为activity_code'
        type: string
      address:
        type: string
      app_id:
        type: integer
      config_id:
        type: integer
      contract_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      file_url:
        type: string
      hash:
        type: string
      id:
        type: integer
      projector_id:
        type: integer
      social_id:
        type: string
      social_type:
        type: integer
      status:
        type: integer
      token_id:
        type: string
      tx_id:
        type: integer
      updated_at:
        type: string
    required:
    - address
    - contract_id
    type: object
  models.POAPResultQueryResult:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.POAPResult'
        type: array
    type: object
  models.PlattenBotServerActivity:
    properties:
      activity_id:
        type: integer
      channel_id:
        type: string
      contract_id:
        type: integer
      contractAddress:
        type: string
      end_time:
        default: -1
        type: integer
      name:
        type: string
      owner_social_id:
        type: string
      rainbow_user_id:
        type: integer
      raw_server_id:
        type: string
      social_tool:
        type: integer
      start_time:
        default: -1
        type: integer
    required:
    - name
    type: object
  models.PushInfo:
    properties:
      activity_id:
        type: integer
      bot_server_id:
        type: integer
      channel_id:
        type: string
      color_theme:
        type: string
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      roles:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateActivityReq:
    properties:
      activity_picture_url:
        type: string
      amount:
        type: integer
      command:
        type: string
      contract_id:
        type: integer
      description:
        type: string
      end_time:
        default: -1
        type: integer
      is_phone_white_list_opened:
        type: boolean
      max_mint_count:
        type: integer
      metadata_uri:
        type: string
      name:
        type: string
      nft_configs:
        items:
          $ref: '#/definitions/models.NFTConfig'
        type: array
      start_time:
        default: -1
        type: integer
      white_list_infos:
        items:
          $ref: '#/definitions/models.WhiteListInfo'
        type: array
    required:
    - amount
    - description
    - max_mint_count
    - name
    type: object
  models.WhiteListInfo:
    properties:
      activityID:
        type: integer
      count:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updated_at:
        type: string
      user:
        type: string
    type: object
  services.Channel:
    properties:
      channelId:
        description: 频道号
        type: string
      channelName:
        description: 频道名称
        type: string
    type: object
  services.InsertBotServerReq:
    properties:
      auth_code:
        type: string
      server_id:
        type: string
      social_tool:
        enum:
        - dodo
        - discord
        type: string
    required:
    - auth_code
    - server_id
    - social_tool
    type: object
  services.MintReq:
    properties:
      activity_id:
        type: string
      command:
        type: string
      user_address:
        type: string
    required:
    - activity_id
    - user_address
    type: object
  services.PushInfoReq:
    properties:
      activity_id:
        type: integer
      channel_id:
        type: string
      color_theme:
        type: string
      content:
        type: string
      id:
        type: integer
      roles:
        items:
          type: string
        type: array
    type: object
  services.Role:
    properties:
      roleId:
        description: 身份组ID
        type: string
      roleName:
        description: 身份组名称
        type: string
    type: object
host: console.nftrainbow.cn
info:
  contact: {}
  description: The responses of the open api in swagger focus on the data field rather
    than the code and the message fields
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rainbow-APP-Service
  version: "1.0"
paths:
  /bot/invite_url:
    get:
      description: get invite url
      operationId: GetInviteUrl
      parameters:
      - description: social tool
        enum:
        - dodo
        - discord
        in: query
        name: social_tool
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get invite url
      tags:
      - Bot
  /bot/server:
    get:
      description: get bot servers
      operationId: GetBotServers
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - default: 1
        in: query
        name: page
        type: integer
      - description: social tool
        enum:
        - dodo
        - discord
        in: query
        name: social_tool
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FindBotServersResult'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get bot servers
      tags:
      - Bot
    post:
      description: insert bot server
      operationId: InsertBotServer
      parameters:
      - description: insert_bot_server_request
        in: body
        name: insert_bot_server_request
        required: true
        schema:
          $ref: '#/definitions/services.InsertBotServerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BotServer'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: insert bot server
      tags:
      - Bot
  /bot/server/{id}:
    get:
      description: get bot server
      operationId: GetBotServer
      parameters:
      - description: server id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BotServer'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get bot server
      tags:
      - Bot
  /bot/server/{id}/pushinfo:
    post:
      description: add push info
      operationId: AddPushInfo
      parameters:
      - description: add push info request
        in: body
        name: push_info_req
        required: true
        schema:
          $ref: '#/definitions/services.PushInfoReq'
      - description: bot_server ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PushInfo'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: add push info
      tags:
      - Bot
  /bot/server/activities:
    get:
      description: get activites of user bot servers
      operationId: GetActivitiesOfUserBotServers
      parameters:
      - default: 10
        in: query
        name: limit
        type: integer
      - default: 1
        in: query
        name: page
        type: integer
      - description: social tool
        enum:
        - dodo
        - discord
        in: query
        name: social_tool
        required: true
        type: string
      - description: activity name
        in: query
        name: activity_name
        type: string
      - description: contract address
        in: query
        name: contract_address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FindBotServerActivitiesResult'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get activites of user bot servers
      tags:
      - Bot
  /bot/server/authcode:
    get:
      description: get bot server roles
      operationId: GetAuthCode
      parameters:
      - in: query
        name: server_id
        required: true
        type: string
      - description: social tool
        enum:
        - dodo
        - discord
        in: query
        name: social_tool
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginutils.CommonMessage'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get bot server roles
      tags:
      - Bot
  /bot/server/channels:
    get:
      description: get bot server channels
      operationId: GetBotServerChannels
      parameters:
      - description: server id
        in: query
        name: server_id
        required: true
        type: string
      - description: social tool
        enum:
        - dodo
        - discord
        in: query
        name: social_tool
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.Channel'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get bot server channels
      tags:
      - Bot
  /bot/server/push/{id}:
    post:
      description: push notification to social tool server
      operationId: Push
      parameters:
      - description: push_info ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginutils.CommonMessage'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: push notification to social tool server
      tags:
      - Bot
  /bot/server/pushinfo/{id}:
    put:
      description: update push info
      operationId: UpdatePushInfo
      parameters:
      - description: update push info request
        in: body
        name: push_info_req
        required: true
        schema:
          $ref: '#/definitions/services.PushInfoReq'
      - description: push_info ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PushInfo'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: update push info
      tags:
      - Bot
  /bot/server/roles:
    get:
      description: get bot server roles
      operationId: GetBotServerRoles
      parameters:
      - description: server id
        in: query
        name: server_id
        required: true
        type: string
      - description: social tool
        enum:
        - dodo
        - discord
        in: query
        name: social_tool
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.Role'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: get bot server roles
      tags:
      - Bot
  /poap/activity:
    get:
      description: Get User Activity list
      operationId: GetUserActivities
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - in: query
        name: activityId
        type: string
      - in: query
        name: contractAddress
        type: string
      - default: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - default: 1
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ActivityQueryResult'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Get User Activity list
      tags:
      - POAP
    post:
      description: Add Activity
      operationId: AddActivity
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: activity config
        in: body
        name: activity_request
        required: true
        schema:
          $ref: '#/definitions/models.ActivityReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Activity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Add Activity
      tags:
      - POAP
  /poap/activity/{activity_code}:
    get:
      description: Get Activity detail info
      operationId: GetActivityDetail
      parameters:
      - description: activity_code
        in: path
        name: activity_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Activity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Get Activity detail
      tags:
      - POAP
    put:
      description: Update Activity
      operationId: UpdateActivity
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: activity_id
        in: path
        name: activity_id
        required: true
        type: string
      - description: update activity request
        in: body
        name: update_activity_request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateActivityReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Activity'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Update Activity
      tags:
      - POAP
  /poap/activity/h5:
    post:
      description: Set H5 Page Config
      operationId: SetActivityH5Config
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: poap_h5_config
        in: body
        name: poap_h5_config
        required: true
        schema:
          $ref: '#/definitions/models.H5Config'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.H5Config'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Set H5 Config
      tags:
      - POAP
  /poap/activity/result/{activity_code}:
    get:
      description: Get Mint Result list
      operationId: GetMintResultList
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: activity_code
        in: path
        name: activity_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.POAPResultQueryResult'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Get Mint Result list
      tags:
      - POAP
  /poap/activity/result/{activity_code}/{id}:
    get:
      description: Get Mint Result
      operationId: GetMintResult
      parameters:
      - description: activity_code
        in: path
        name: activity_code
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.POAPResult'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Get Mint Result
      tags:
      - POAP
  /poap/count/{address}/{activity_code}:
    get:
      description: Get Mint Count
      operationId: GetMintCount
      parameters:
      - description: activity_code
        in: path
        name: activity_code
        required: true
        type: string
      - description: address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Get Mint Count
      tags:
      - POAP
  /poap/h5:
    post:
      description: Mint By H5
      operationId: MintByH5
      parameters:
      - description: mint request
        in: body
        name: mint_req
        required: true
        schema:
          $ref: '#/definitions/services.MintReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.POAPResult'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Mint By H5
      tags:
      - POAP
  /poap/wallet/user:
    post:
      description: Add user wallet profile, so backend can get user phone from anyweb
      operationId: AddWalletUser
      parameters:
      - in: query
        name: address
        type: string
      - in: query
        name: code
        type: string
      - in: query
        name: phone
        type: string
      - in: query
        name: wallet
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginutils.CommonMessage'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/appService_errors.RainbowAppServiceErrorDetailInfo'
      security:
      - ApiKeyAuth: []
      summary: Add user wallet profile, so backend can get user phone from anyweb
      tags:
      - POAP
schemes:
- http
- https
swagger: "2.0"
